name: Create docfx documentation

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+-[a-z]+.[0-9]+.[0-9]+"
  workflow_dispatch:

permissions: {}

jobs:
  docs:
    outputs:
      status: ${{ job.status }}
    permissions:
      contents: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        senzingsdk-version: [production-v4]
        include:
          - dotnet-version: "8"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - uses: actions/setup-dotnet@v5
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: install Senzing SDK
        uses: senzing-factory/github-action-install-senzing-sdk@v3
        with:
          packages-to-install: "senzingsdk-runtime senzingsdk-setup"
          senzingsdk-version: ${{ matrix.senzingsdk-version }}

      - name: Run docfx
        env:
          LD_LIBRARY_PATH: "/opt/senzing/er/lib"
        run: |
          dotnet tool restore
          dotnet test Senzing.Sdk.Demo -p:GeneratePackageOnBuild=false
          dotnet build -c Release Senzing.Sdk -p:GenerateDocumentationFile=true
          dotnet docfx docfx.json

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: target/apidocs/_site/
          force_orphan: true

  slack-notification:
    needs: [docs]
    if: ${{ always() && contains(fromJSON('["failure", "cancelled"]'), needs.docs.outputs.status ) }}
    secrets:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
    uses: senzing-factory/build-resources/.github/workflows/build-failure-slack-notification.yaml@v3
    with:
      job-status: ${{ needs.docs.outputs.status }}
