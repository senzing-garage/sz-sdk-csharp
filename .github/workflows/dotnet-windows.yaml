name: dotnet windows

on:
  pull_request:
    # branches: [main]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  dotnet-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - dotnet-version: "8"
            senzingapi-version: "staging-v4"

    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: install Senzing runtime
        uses: senzing-factory/github-action-install-senzing-api@v4
        with:
          senzingapi-version: ${{ matrix.senzingapi-version }}

      - name: Build with DotNet
        run: |
          dotnet build Senzing.Sdk

      - name: Validate tests compile
        run: |
          dotnet build Senzing.Sdk.Tests

      - name: Run DotNet tests
        env:
          LD_LIBRARY_PATH: 'C:\Program Files\Senzing\er\lib'
          SENZING_DATA_DIR: 'C:\Program Files\Senzing\er\data'
        run: |
          echo "C:\Program Files\Senzing\er\lib" >> "$GITHUB_PATH"
          ls "C:\Program Files\Senzing\er\lib"
          $env:path
          dotnet test Senzing.Sdk.Tests --logger trx --collect:"XPlat Code Coverage"

      - name: Store coverage file
        uses: actions/upload-artifact@v4
        with:
          name: coverage.cobertura.xml
          path: ${{ github.workspace }}/coverage.cobertura.xml

  coverage:
    name: Coverage
    needs: dotnet-windows
    permissions:
      pull-requests: write
    uses: senzing-factory/build-resources/.github/workflows/csharp-coverage-comment.yaml@v2
    with:
      thresholds: "49 90"
